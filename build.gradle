plugins {
    id "java" // https://docs.gradle.org/current/userguide/java_plugin.html
    id "signing" // https://docs.gradle.org/current/userguide/signing_plugin.html
    id "com.github.johnrengelman.shadow" version "6.1.0" // https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow
    id "com.github.vlsi.license-gather" version "1.7.0" // https://plugins.gradle.org/plugin/com.github.vlsi.license-gather
}

group 'me.alexisevelyn'
version '0.0.7-SNAPSHOT'

// https://discuss.gradle.org/t/sourcecompatibility-targetcompatibility-usage-reasons/25133/4
// I have no idea how to tell which version is the minimal version that can compile this
//sourceCompatibility = 1.8
//targetCompatibility = 1.11

repositories {
    mavenCentral()
}

dependencies {
    // License Compatibility - https://opensource.stackexchange.com/a/7908/9726
    // License (Dual Licensed Under EPL v1.0 and LGPL 2.1) - https://logback.qos.ch/license.html
    implementation "ch.qos.logback:logback-core:${project.logback_version}"
    shadow "ch.qos.logback:logback-core:${project.logback_version}"

    // License (Dual Licensed Under EPL v1.0 and LGPL 2.1) - https://logback.qos.ch/license.html
    implementation "ch.qos.logback:logback-classic:${project.logback_version}"
    shadow "ch.qos.logback:logback-classic:${project.logback_version}"

    // License (Identical to MIT) - http://slf4j.org/license.html
    implementation "org.slf4j:slf4j-api:${project.slf4j_api_version}"
    shadow "org.slf4j:slf4j-api:${project.slf4j_api_version}"

    // License (MIT) - https://github.com/luaj/luaj/blob/master/LICENSE
    implementation "org.luaj:luaj-jse:${project.luaj_version}"
    shadow "org.luaj:luaj-jse:${project.luaj_version}"

    // License (Apache 2.0) - https://github.com/JetBrains/java-annotations/blob/master/LICENSE.txt
    implementation "org.jetbrains:annotations:${project.jetbrains_annotations_version}"

    // License (Apache 2.0) - https://github.com/apache/mina-sshd/blob/master/LICENSE.txt
    // Compatible With MIT According To https://www.quora.com/Is-the-MIT-license-compatible-with-the-Apache-License-Version-2-APLv2
    // Modules - https://github.com/apache/mina-sshd/blob/master/README.md#basic-artifacts-structure
    implementation "org.apache.sshd:sshd-core:${project.apache_mina_sshd_version}"
    shadow "org.apache.sshd:sshd-core:${project.apache_mina_sshd_version}"

    // License (Crockford MIT - aka the no evil license) - https://github.com/stleary/JSON-java/blob/master/LICENSE
    implementation "org.json:json:${project.json_version}"
    shadow "org.json:json:${project.json_version}"

    // License (BSD-3) - https://github.com/jline/jline3/blob/master/LICENSE.txt
    // Requires License In Binary Distribution - Can Be Found in `META-INF/licenses/jline3-license.txt`
    implementation "org.jline:jline:${project.jline_version}"
    shadow "org.jline:jline:${project.jline_version}"

    // License (Apache 2.0) - https://github.com/apiguardian-team/apiguardian/blob/master/LICENSE
    implementation "org.apiguardian:apiguardian-api:${project.api_guardian_version}"

    // JUnit API
    // License (EPL-2.0) - https://github.com/junit-team/junit5/blob/main/LICENSE.md
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${project.junit_version}"

    // JUnit Engine
    // License (EPL-2.0) - https://github.com/junit-team/junit5/blob/main/LICENSE.md
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${project.junit_version}"
}

// Configure Auto Relocation
//import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

//shadowJar {
//    archiveBaseName.set('shadow')
//    archiveClassifier.set('')
//    archiveVersion.set('')
//}

// This is to prevent dependency conflicts (causes too many problems right now, will deal with later)
// https://imperceptiblethoughts.com/shadow/configuration/relocation/#automatically-relocating-dependencies
//task relocateShadowJar(type: ConfigureShadowRelocation) {
//    target = tasks.shadowJar
//    prefix = "shadow.crewmate" // Default value is "shadow"
//}

//tasks.shadowJar.dependsOn tasks.relocateShadowJar

jar {
    manifest {
        attributes(
            'Main-Class': 'me.alexisevelyn.crewmate.Main',
            'Bundle-License': 'MIT; link="https://github.com/alexis-evelyn/Crewmate/blob/master/LICENSE.md"'
        )
    }
}

// This is so build time properties like the server version are saved in the jar
// https://stackoverflow.com/a/54006518/6828099
processResources {
    filesMatching('compileTime.properties') {
        expand([build_version: version])
    }
}

test {
    useJUnitPlatform() // For JUnit 5 - JUnit 4 was just useJUnit()

    maxHeapSize = '1G'
}

// Currently None of the libraries appear to use a standard for machine license reading
// https://github.com/vlsi/vlsi-release-plugins#license-gather-plugin
tasks.register('generateLicense', com.github.vlsi.gradle.license.GatherLicenseTask.class) {
    configurations.add(project.configurations.runtime)
    licenseDir.set(file("$buildDir/third-party-licenses"))
}

// Include Source Set For Example Plugin
apply from: "example-plugin.gradle"